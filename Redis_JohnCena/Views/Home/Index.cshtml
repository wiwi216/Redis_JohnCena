@model Redis_JohnCena.Models.ChartsViewModel

@{
    ViewBag.Title = "Home Page";
}

@section styles {
<style>
.rwd-table {
  margin: 1em 0;
  min-width: 300px;
  width: 1100px;
}
.rwd-table tr {
  border-top: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
  text-align:center;
}
.rwd-table th {
  display: none;
  text-align:center;
}
.rwd-table td {
  display: block;
  text-align:center;
}
.rwd-table td:first-child {
  padding-top: .5em;
}
.rwd-table td:last-child {
  padding-bottom: .5em;
}
.rwd-table td:before {
  content: attr(data-th) ": ";
  font-weight: bold;
  width: 6.5em;
  display: inline-block;
}
.rwd-table td:before {
display: none;
}
.rwd-table th, .rwd-table td {
  text-align: left;
}
.rwd-table th, .rwd-table td {
display: table-cell;
padding: .25em .5em;
}
.rwd-table th:first-child, .rwd-table td:first-child {
padding-left: 0;
}
.rwd-table th:last-child, .rwd-table td:last-child {
padding-right: 0;
}

body {
  padding: 0 2em;
  font-family: Montserrat, sans-serif;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  color: #444;
  background: #eee;
}

h1 {
  font-weight: normal;
  letter-spacing: -1px;
  color: #34495E;
}

.rwd-table {
  background: #34495E;
  color: #fff;
  border-radius: .4em;
  overflow: hidden;
}
.rwd-table tr {
  border-color: #46637f;
}
.rwd-table th, .rwd-table td {
  margin: .5em 1em;
}

.rwd-table th, .rwd-table td {
padding: 1em !important;
}

.rwd-table th, .rwd-table td:before {
  color: #dd5;
}

</style>
}

@section scripts {

@Scripts.Render("~/bundles/echarts")

<script type="text/javascript">
    function ShowCPUChart()
    {
        // 基於準備好的DOM，初始化echarts.js
        var myChart = echarts.init(document.getElementById('cpu'));

        // 設定圖表數據
        var option = {
            title: {
                left: '35%',
                text: '@Model.CPUChart.Title',
                //subtext: '纯属虚构'
            },
            tooltip: {
                trigger: 'axis'
            },
            toolbox: {
                show: true,
                feature: {
                    dataZoom: {},
                    dataView: { readOnly: false },
                    magicType: { type: ['line', 'bar'] },
                    restore: {},
                    saveAsImage: {}
                }
            },
            xAxis: {
                name: '@Model.CPUChart.XAxisName',
                data: @Html.Raw(Json.Encode(Model.CPUChart.XAxisList)),
                type: 'category',
                boundaryGap: false,
            },
            yAxis: {
                name: '@Model.CPUChart.YAxisName',
                @* data: @Html.Raw(Json.Encode(Model.CPUChart.YAxisList)), *@
                type: 'value',
                axisLabel: {
                    formatter: '{value}'
                }
            },
            series: [
				{
				    name: '使用率',
				    type: 'line',
				    data: @Html.Raw(Json.Encode(Model.CPUChart.DataList)),
				    itemStyle: {
				        normal: {
				            color: '#6def6f'
				        }
				    },
				}
            ]
        };

        // 顯示圖表
        myChart.setOption(option);
    }
    ShowCPUChart();

    function ShowMemoryChart()
    {
        // 基於準備好的DOM，初始化echarts.js
        var myChart = echarts.init(document.getElementById('memory'));

        // 設定圖表數據
        var option = {
            title: {
                text: '@Model.MemoryChart.Title',
                left: '35%',
                textAlign: 'center'
            },
            tooltip: {
                trigger: 'axis'
            },
            toolbox: {
                show: true,
                feature: {
                    dataZoom: {},
                    dataView: { readOnly: false },
                    magicType: { type: ['line', 'bar'] },
                    restore: {},
                    saveAsImage: {}
                }
            },
            //tooltip: {
            //    trigger: 'asix',
            //    axisPointer: {
            //        lineStyle: {
            //            color: '#ddd'
            //        }
            //    },
            //    backgroundColor: 'rgba(255,255,255,1)',
            //    padding: [5, 10],
            //    textStyle: {
            //        color: '#7588E4',
            //    },
            //    extraCssText: 'box-shadow: 0 0 5px rgba(0,0,0,0.3)',
            //},
            //legend: {
            //    right: 20,
            //    orient: 'vertical',
            //    data: ['今日', '昨日']
            //},
            xAxis: {
                name: '@Model.MemoryChart.XAxisName',
                type: 'category',
                data: @Html.Raw(Json.Encode(Model.MemoryChart.XAxisList)),
                boundaryGap: false,
                splitLine: {
                    show: true,
                    interval: 'auto',
                    lineStyle: {
                        color: ['#D4DFF5']
                    }
                },
                axisTick: {
                    show: false
                },
                axisLine: {
                    lineStyle: {
                        color: '#609ee9'
                    }
                },
                axisLabel: {
                    margin: 10,
                    textStyle: {
                        fontSize: 14
                    }
                }
            },
            yAxis: {
                name: '@Model.MemoryChart.YAxisName',
                type: 'value',
                splitLine: {
                    lineStyle: {
                        color: ['#D4DFF5']
                    }
                },
                axisTick: {
                    show: false
                },
                axisLine: {
                    lineStyle: {
                        color: '#609ee9'
                    }
                },
                axisLabel: {
                    margin: 10,
                    textStyle: {
                        fontSize: 14
                    }
                },
                @* data: @Html.Raw(Json.Encode(Model.MemoryChart.YAxisList)), *@
            },
            series: [{
                name: '數據',
                type: 'line',
                smooth: true,
                showSymbol: false,
                symbol: 'circle',
                symbolSize: 6,
                data: @Html.Raw(Json.Encode(Model.MemoryChart.DataList)),
                areaStyle: {
                    normal: {
                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                            offset: 0,
                            color: 'rgba(199, 237, 250,0.5)'
                        }, {
                            offset: 1,
                            color: 'rgba(199, 237, 250,0.2)'
                        }], false)
                    }
                },
                itemStyle: {
                    normal: {
                        color: '#f7b851'
                    }
                },
                lineStyle: {
                    normal: {
                        width: 3
                    }
                }
            }]
        };

        // 顯示圖表
        myChart.setOption(option);
    }
    ShowMemoryChart();

    function ShowCommandProcessedChart()
    {
        // 基於準備好的DOM，初始化echarts.js
        var myChart = echarts.init(document.getElementById('commandCount'));

        // 設定圖表數據
        var option = {
            title: {
                text: '@Model.CommandProcessedChart.Title',
                left: '35%',
                textAlign: 'center'
            },
            xAxis: {
                name: '@Model.CommandProcessedChart.XAxisName',
                data: @Html.Raw(Json.Encode(Model.CommandProcessedChart.XAxisList)),
            },
            tooltip: {
                show: true
            },
            toolbox: {
                show: true,
                feature: {
                    dataZoom: {},
                    dataView: { readOnly: false },
                    magicType: { type: ['line', 'bar'] },
                    restore: {},
                    saveAsImage: {}
                }
            },
            yAxis: {
                name: '@Model.CommandProcessedChart.YAxisName',
                //data: @Html.Raw(Json.Encode(Model.CommandProcessedChart.XAxisList)),
            },
            series: [{
                type: 'line',
                data: @Html.Raw(Json.Encode(Model.CommandProcessedChart.DataList)),
            }, {
                type: 'bar',
                data: @Html.Raw(Json.Encode(Model.CommandProcessedChart.DataList)),
            }]
        };

        // 顯示圖表
        myChart.setOption(option);
    }
    ShowCommandProcessedChart();

    function ShowThroughputChart()
    {
        // 基於準備好的DOM，初始化echarts.js
        var myChart = echarts.init(document.getElementById('throughput'));

        // 設定圖表數據
        var option = {
            title: {
                text: '@Model.ThroughputChart.Title',
                left: '35%',
                textAlign: 'center'
            },
            tooltip : {
                trigger: 'axis'
            },
            toolbox: {
                show: true,
                feature: {
                    dataZoom: {},
                    dataView: { readOnly: false },
                    magicType: { type: ['line', 'bar'] },
                    restore: {},
                    saveAsImage: {}
                }
            },
            xAxis: {
                name: '@Model.ThroughputChart.XAxisName',
                data: @Html.Raw(Json.Encode(Model.ThroughputChart.XAxisList)),
            },
            yAxis: {
                name: '@Model.ThroughputChart.YAxisName',
                type : 'value',
                data: @Html.Raw(Json.Encode(Model.ThroughputChart.YAxisList)),
            },
            series: [{
                type: 'line',
                data: @Html.Raw(Json.Encode(Model.ThroughputChart.DataList)),
                markPoint: {
                    data: [
                        {type: 'max', name: '最大值'},
                        {type: 'min', name: '最小值'}
                    ]
                },
                itemStyle: {
                    normal: {
                        color: '#428bca'
                    }
                },
            }]
        };

        // 顯示圖表
        myChart.setOption(option);
    }
    ShowThroughputChart();
</script>

}

<div class="row" style="height: 100px;">
</div>

<table class="rwd-table">
    <tbody>
        <tr>
            <th style="text-align:center;">Total Keys</th>
            <th style="text-align:center;">Clients</th>
            <th style="text-align:center;">Slaves</th>
            <th style="text-align:center;">UpdateTime</th>
        </tr>
        <tr>
            <td data-th="Total Keys" style="text-align:center;">@Model.TotalKeys</td>
            <td data-th="Clients" style="text-align:center;">@Model.ClientCount</td>
            <td data-th="Slaves" style="text-align:center;">0</td>
            <td data-th="UpdateTime" style="text-align:center;">5 days</td>
        </tr>
    </tbody>
</table>

<div class="row">
    <div class="col-md-6">
        <div id="cpu" style="width: 500px; height:400px;"></div>
    </div>
    <div class="col-md-6">
        <div id="memory" style="width: 500px; height:400px;"></div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div id="commandCount" style="width: 500px; height:400px;"></div>
    </div>
    <div class="col-md-6">
        <div id="throughput" style="width: 500px; height:400px;"></div>
    </div>
</div>
<div class="row" style="display:none;">
    <div class="col-md-4">
        <h2>Cache Hit Ratio</h2>
        <img src="~/Resource/images/CPU_usage.png"  width="350" />
    </div>
    <div class="col-md-4">
        <h2>Latency</h2>
        <img src="~/Resource/images/CPU_usage.png"  width="350" />
    </div>
    <div class="col-md-4">
        <h2>Throughput</h2>
        <img src="~/Resource/images/CPU_usage.png"  width="350" />
    </div>
</div>